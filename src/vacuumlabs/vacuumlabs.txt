def get_synonyms_sets(content_list):
    synonym_sets = []
    k = 0
    while content_list:
        first, second = content_list.pop(0).split()
        synonym_sets.append({first, second})
        added = True
        while added:
            added = False
            for idx, line in enumerate(content_list):
                first, second = line.split()[0], line.split()[1]
                if first in synonym_sets[k]:
                    content_list.pop(idx)
                    synonym_sets[k].add(second)
                    added = True
                    break
                elif second in synonym_sets[k]:
                    content_list.pop(idx)
                    synonym_sets[k].add(first)
                    added = True
                    break

        k += 1
    return synonym_sets

with open("example_big.txt", "r", encoding="UTF-8") as f:
    content = f.read()

content = content.split("\n")
content = list(map(lambda x: x.lower(), content))
n_cases = int(content[0])

pos = 1
with open("output.txt", "w", encoding="UTF-8") as f:
    for i in range(n_cases):
        N = int(content[pos])
        pos += 1
        synonym_sets = get_synonyms_sets(content[pos: pos + N])
       
        pos += N
        Q = int(content[pos])
        pos += 1
        query_tuples = [(x.split()[0], x.split()[1]) for x in content[pos: pos + Q]]
        pos += Q
        
        for query in query_tuples:
            added = 0
            if query[0] == query[1]:
                f.write("synonyms\n")
                added = 1
                continue
            for synset in synonym_sets:
                if query[0] in synset and query[1] in synset:
                    f.write("synonyms\n")
                    added = 1
                    break
            if not added:
                f.write("different\n")